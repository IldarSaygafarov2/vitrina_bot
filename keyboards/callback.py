from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def realtor_start_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', callback_data='show_my_ads')
    kb.button(text='–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', callback_data='create_ad')
    kb.adjust(2)
    return kb.as_markup()


def ads_categories_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ê—Ä–µ–Ω–¥–∞', callback_data='category_–ê—Ä–µ–Ω–¥–∞')
    kb.button(text='–ü–æ–∫—É–ø–∫–∞', callback_data='category_–ü–æ–∫—É–ø–∫–∞')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data='start_realtor')
    kb.adjust(2)
    return kb.as_markup()


def group_director_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text='–°–ø–∏—Å–æ–∫ —Ä–∏–µ–ª—Ç–æ—Ä–æ–≤', callback_data='realtors_list')
    kb.button(text='–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', callback_data='latest_ads')

    kb.adjust(2)
    return kb.as_markup()


def districts_kb(districts: list) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=district['name'], callback_data=f'district_{district["slug"]}')
            ] for district in districts
        ]
    )
    return kb


def property_categories_kb(categories: list) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for category in categories:
        kb.button(text=category.get('name'), callback_data=f'property_category:{category["slug"]}')
    kb.adjust(2)
    return kb.as_markup()


def realtors_kb(realtors_list: list):
    kb = InlineKeyboardBuilder()
    for realtor in realtors_list:
        kb.button(text=f'{realtor["first_name"]} {realtor["last_name"]}',
                  callback_data=f'realtor:{realtor["tg_username"]}:{realtor["id"]}')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data='start_menu')
    kb.adjust(2)
    return kb.as_markup()


def ads_moderation_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ', callback_data='checked_ads')
    kb.button(text='–ù–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ', callback_data='unchecked_ads')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data='realtors_list')
    kb.adjust(2)
    return kb.as_markup()


def moderate_adv_kb(adv_id: int):
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ', callback_data=f'yes_{adv_id}')
    kb.button(text='üö´', callback_data=f'no_{adv_id}')
    kb.adjust(2, 2)
    return kb.as_markup()


def realtor_advertisements_kb(ads_list: list, checked: bool):
    kb = InlineKeyboardBuilder()
    for idx, ad in enumerate(ads_list, start=1):
        callback_data = f'checked_ad:{ad["id"]}' if checked else f'unchecked_ad:{ad["id"]}'
        kb.button(text=f'{idx}. {ad["name"]}', callback_data=callback_data)
    kb.adjust(1)
    kb.row(
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='realtors_list')
    )
    return kb.as_markup()


def return_to_ads_kb(callback_data: str, adv_id: int, show_checks: bool = True):
    kb = InlineKeyboardBuilder()
    if show_checks:
        kb.button(text='‚úÖ', callback_data=f'yes_{adv_id}')
        kb.button(text='üö´', callback_data=f'no_{adv_id}')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data=callback_data)
    kb.adjust(2)
    return kb.as_markup()


def return_back_kb(callback_data: str):
    kb = InlineKeyboardBuilder()
    kb.button(text='–ù–∞–∑–∞–¥', callback_data=callback_data)
    return kb.as_markup()


def continue_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='continue')
    return kb.as_markup()


def realtors_ads_kb(realtor_id: int):
    kb = InlineKeyboardBuilder()
    kb.button(text='–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ', callback_data=f'checked_ads:{realtor_id}')
    kb.button(text='–ù–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ', callback_data=f'unchecked_ads:{realtor_id}')
    kb.adjust()
    return kb.as_markup()


def process_update_advertisement_kb(adv_id: int):
    kb = InlineKeyboardBuilder()
    kb.button(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', callback_data=f'update_advertisement:{adv_id}')
    return kb.as_markup()


def advertisement_fields_for_update_kb(adv_id: int):
    kb = InlineKeyboardBuilder()
    fields = [
        ('title', '–ù–∞–∑–≤–∞–Ω–∏–µ'),
        ('operation_type', '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏'),
        ('description', '–û–ø–∏—Å–∞–Ω–∏–µ'),
        ('district', '–†–∞–π–æ–Ω'),
        ('address', '–ê–¥—Ä–µ—Å'),
        ('property_category', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'),
        ('property_type', '–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'),
        ('price', '–¶–µ–Ω–∞'),
        ('quadrature_from', '–ö–≤–∞–¥—Ä–∞—Ç—É—Ä–∞ –æ—Ç'),
        ('quadrature_to', '–ö–≤–∞–¥—Ä–∞—Ç—É—Ä–∞ –¥–æ'),
        ('creation_date', '–î–∞—Ç–∞ –ø–æ—Å—Ç—Ä–æ–π–∫–∏'),
        ('rooms_from', '–ö–æ–ª-–≤–æ –∫–æ–º–Ω–∞—Ç –æ—Ç'),
        ('rooms_to', '–ö–æ–ª-–≤–æ –∫–æ–º–Ω–∞—Ç –¥–æ'),
        ('floor_from', '–≠—Ç–∞–∂ –æ—Ç'),
        ('floor_to', '–≠—Ç–∞–∂ –¥–æ'),
        ('repair_type', '–¢–∏–ø —Ä–µ–º–æ–Ω—Ç–∞'),
        ('house_quadrature', '–ü–ª–æ—â–∞–¥—å –¥–æ–º–∞'),
        ('is_studio', '–°—Ç—É–¥–∏—è'),
    ]
